{"version":3,"sources":["pages/repositories/styled.js","pages/repositories/index.js","pages/home/styled.js","pages/home/index.js","routes.js","App.js","index.js"],"names":["Container","styled","div","Title","h1","List","ul","ListItem","li","LinkHome","Link","Repositories","history","useHistory","useState","repositories","setRepositories","useEffect","repositoriesName","localStorage","getItem","JSON","parse","console","log","clear","push","map","repository","to","HomeContainer","Content","Input","input","Button","button","ErrorMsg","span","App","props","usuario","setUsuario","erro","setErro","className","placeholder","value","onChange","e","target","type","onClick","axios","get","then","response","data","name","setItem","stringify","catch","Routes","path","exact","component","Home","ReactDOM","render","document","getElementById"],"mappings":"0MAIaA,EAAYC,IAAOC,IAAV,0FAOTC,EAAQF,IAAOG,GAAV,2HAOLC,EAAOJ,IAAOK,GAAV,kHAOJC,EAAWN,IAAOO,GAAV,gGAORC,EAAWR,YAAOS,IAAPT,CAAH,0N,OC5BN,SAASU,IACpB,IAAMC,EAAUC,cADkB,EAEQC,mBAAS,IAFjB,mBAE1BC,EAF0B,KAEZC,EAFY,KAmBlC,OAdAC,qBAAU,WACN,IAAIC,EAAmBC,aAAaC,QAAQ,oBAErB,MAApBF,GACCA,EAAmBG,KAAKC,MAAMJ,GAC9BK,QAAQC,IAAIN,GACZF,EAAgBE,GAChBC,aAAaM,SAEbb,EAAQc,KAAK,OAGlB,IAGC,eAAC,EAAD,WACI,cAAC,EAAD,8BACA,cAAC,EAAD,UACMX,EAAaY,KAAI,SAAAC,GACf,OACI,eAAC,EAAD,8BAA2BA,UAIvC,cAAC,EAAD,CAAYC,GAAG,IAAf,uB,+BC/BCC,EAAgB7B,IAAOC,IAAV,yJAQb6B,EAAU9B,IAAOC,IAAV,4HAQP8B,EAAQ/B,IAAOgC,MAAV,kOAaLC,EAASjC,IAAOkC,OAAV,qPAaNC,EAAWnC,IAAOoC,KAAV,uICLNC,MAlCf,SAAaC,GACX,IAAM3B,EAAUC,cADE,EAEaC,mBAAS,IAFtB,mBAEV0B,EAFU,KAEDC,EAFC,OAGO3B,oBAAS,GAHhB,mBAGV4B,EAHU,KAGJC,EAHI,KAsBlB,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASC,UAAU,eAAeC,YAAY,aAAUC,MAAON,EAASO,SAAU,SAAAC,GAAC,OAAIP,EAAWO,EAAEC,OAAOH,UAC3G,cAAC,EAAD,CAAUI,KAAK,SAASC,QArB9B,WACIC,IAAMC,IAAN,uCAA0Cb,EAA1C,WAA2Dc,MAAK,SAAAC,GAChE,IAAMxC,EAAewC,EAASC,KACxBtC,EAAmB,GACzBH,EAAaY,KAAI,SAACC,GAChBV,EAAiBQ,KAAKE,EAAW6B,SAEnCtC,aAAauC,QAAQ,mBAAoBrC,KAAKsC,UAAUzC,IACxDyB,GAAQ,GACR/B,EAAQc,KAAK,oBAEdkC,OAAM,SAAAlB,GACLC,GAAQ,OASN,uBACED,EAAO,cAAC,EAAD,gDAA6D,SCzB/D,SAASmB,IACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,gBAAgBE,UAAWrD,S,MCAxC2B,MANf,SAAaC,GACX,OACE,cAACsB,EAAD,KCHJK,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.eabd3342.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    max-width: 991px;\r\n    margin: 0 auto;\r\n`\r\n\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    font-family: sans-serif;\r\n    color: #333;\r\n`\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: sans-serif;\r\n`\r\n\r\nexport const ListItem = styled.li`\r\nmargin: .5em 0;\r\nbackground: #000;\r\ncolor: #fff;\r\npadding: 0.5rem;\r\n`\r\n\r\nexport const LinkHome = styled(Link)`\r\n    display: block;\r\n    width: 4em;\r\n    text-align:center;\r\n    margin: 2em auto;\r\n    background-color: #000;\r\n    padding: .5em 0 .5em 0;\r\n    color: white;\r\n    text-decoration: none;\r\n`\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as S from './styled';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Repositories(){\r\n    const history = useHistory();\r\n    const [ repositories, setRepositories ] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let repositoriesName = localStorage.getItem('repositoriesName');\r\n        \r\n        if(repositoriesName != null){\r\n            repositoriesName = JSON.parse(repositoriesName);\r\n            console.log(repositoriesName);\r\n            setRepositories(repositoriesName);\r\n            localStorage.clear();\r\n        } else {\r\n            history.push('/');\r\n        }\r\n\r\n    }, []);\r\n    \r\n    return(\r\n        <S.Container>\r\n            <S.Title>Repositório:</S.Title>\r\n            <S.List>\r\n                { repositories.map(repository => {\r\n                    return (\r\n                        <S.ListItem>Repositório: { repository }</S.ListItem>\r\n                    )\r\n                })}\r\n            </S.List>\r\n            <S.LinkHome to='/'>Voltar</S.LinkHome>\r\n        </S.Container>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const HomeContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    align-items: center; \r\n    justify-content: center;\r\n`\r\n\r\n\r\nexport const Input = styled.input`\r\n    border: 1px solid #ddd;\r\n    height: 1.5em;\r\n    padding: 0 .5em;\r\n    border-radius: .25em 0 0 .25em;\r\n\r\n    &:focus,\r\n    &:active {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n`\r\n\r\nexport const Button = styled.button `\r\n    height: 1.5em;\r\n    border: 1px solid #000;\r\n    background: #000;\r\n    color: #fff;\r\n    border-radius: 0 .25em .25em 0;\r\n\r\n    &:focus,\r\n    &:active {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n`\r\nexport const ErrorMsg = styled.span`\r\n    display: block;\r\n    font-size: 0.65em;\r\n    color: red;\r\n    font-weight: 600;\r\n    margin-top: 1em;\r\n`","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport * as S from './styled';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction App(props) {\r\n  const history = useHistory();\r\n  const [ usuario, setUsuario] = useState('');\r\n  const [ erro, setErro] = useState(false);\r\n\r\n  function handlePesquisa(){\r\n      axios.get(`https://api.github.com/users/${usuario}/repos`).then(response => {\r\n      const repositories = response.data;\r\n      const repositoriesName = [];\r\n      repositories.map((repository) => {\r\n        repositoriesName.push(repository.name);\r\n      });\r\n      localStorage.setItem('repositoriesName', JSON.stringify(repositoriesName));\r\n      setErro(false);\r\n      history.push('/repositories');\r\n    })\r\n    .catch(erro => {\r\n      setErro(true);\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <S.HomeContainer>\r\n      <S.Content>\r\n        <S.Input className=\"usuarioInput\" placeholder=\"Usuário\" value={usuario} onChange={e => setUsuario(e.target.value)} />\r\n        <S.Button type=\"button\" onClick={handlePesquisa}>Pesquisar</S.Button>\r\n        { erro ? <S.ErrorMsg>Ocorreu um erro. Tente novamente.</S.ErrorMsg> : ''}\r\n        \r\n      </S.Content>\r\n    </S.HomeContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nimport Repositories from './pages/repositories';\r\nimport Home from './pages/home';\r\n\r\nexport default function Routes(){\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/' exact component={Home} />\r\n                <Route path='/repositories' component={Repositories} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React, { useState } from 'react';\nimport Routes from './routes';\n\nimport './style.css'\n\n\nfunction App(props) {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Repositories from './pages/repositories';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}